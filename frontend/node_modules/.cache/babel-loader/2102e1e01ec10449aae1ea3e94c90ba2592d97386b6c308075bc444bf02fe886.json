{"ast":null,"code":"var _jsxFileName = \"/home/divya/mytravel/travel/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport api, { authService, customerService, providerService } from '../services/api';\n\n// Create the authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [token, setToken] = useState(() => localStorage.getItem('token'));\n\n  // Check if user is authenticated on initial load\n  const checkAuthStatus = useCallback(async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setUser(null);\n        setLoading(false);\n        return;\n      }\n\n      // Set default headers for all requests\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Try to get user profile based on role stored in token\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      const role = decodedToken.role;\n      let response;\n      if (role === 'customer') {\n        response = await customerService.getProfile();\n      } else if (role === 'provider') {\n        response = await providerService.getProfile();\n      } else {\n        throw new Error('Invalid user role');\n      }\n      if (response && response.data) {\n        setUser({\n          ...response.data,\n          role\n        });\n      } else {\n        setUser(null);\n        localStorage.removeItem('token');\n      }\n    } catch (err) {\n      console.error('Auth status error:', err);\n      setUser(null);\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n\n  // Login function\n  const login = async ({\n    id,\n    password\n  }) => {\n    setLoading(true);\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:4000/api'}/auth/login`, {\n        id,\n        password\n      });\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n      setToken(token);\n      setError(null);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Login failed');\n      return {\n        success: false\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const registerCustomer = async userData => {\n    setLoading(true);\n    setError('');\n    try {\n      const backendData = {\n        name: `${userData.firstName} ${userData.lastName}`,\n        email: userData.email,\n        phone: userData.phoneNumber,\n        password: userData.password,\n        visibility: 'public'\n      };\n      const response = await authService.registerCustomer(backendData);\n      const {\n        token,\n        user\n      } = response.data;\n      return {\n        success: true,\n        userId: user.id\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data, _err$response3, _err$response3$data;\n      console.error('Customer registration error:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to register. Please try again.');\n      return {\n        success: false,\n        error: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Registration failed'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const registerProvider = async userData => {\n    setLoading(true);\n    setError('');\n    try {\n      const backendData = {\n        name: userData.businessName,\n        email: userData.email,\n        phone: userData.phoneNumber,\n        password: userData.password,\n        transportMode: mapServiceTypeToTransportMode(userData.serviceType)\n      };\n      const response = await authService.registerProvider(backendData);\n      const {\n        token,\n        user\n      } = response.data;\n      return {\n        success: true,\n        userId: user.id\n      };\n    } catch (err) {\n      var _err$response4, _err$response4$data, _err$response5, _err$response5$data;\n      console.error('Provider registration error:', err);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || 'Failed to register. Please try again.');\n      return {\n        success: false,\n        error: ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.error) || 'Registration failed'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const mapServiceTypeToTransportMode = serviceType => {\n    switch (serviceType) {\n      case 'Hotel':\n      case 'Transportation':\n      case 'Tour Guide':\n      case 'Restaurant':\n      case 'Activity':\n      default:\n        return 'land';\n    }\n  };\n  const register = async userData => {\n    if (userData.role === 'customer') {\n      return registerCustomer(userData);\n    } else if (userData.role === 'provider') {\n      return registerProvider(userData);\n    } else {\n      setError('Invalid user role');\n      return {\n        success: false,\n        error: 'Invalid user role'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    delete api.defaults.headers.common['Authorization'];\n  };\n  const updateProfile = async userData => {\n    setLoading(true);\n    setError('');\n    try {\n      let response;\n      if (user.role === 'customer') {\n        const updateData = {\n          name: userData.firstName && userData.lastName ? `${userData.firstName} ${userData.lastName}` : undefined,\n          email: userData.email,\n          phone: userData.phoneNumber,\n          visibility: userData.visibility || 'public'\n        };\n        if (userData.password) {\n          updateData.password = userData.password;\n        }\n        response = await customerService.updateProfile(updateData);\n      } else if (user.role === 'provider') {\n        const updateData = {\n          name: userData.businessName,\n          email: userData.email,\n          phone: userData.phoneNumber,\n          transportMode: userData.transportMode || 'land'\n        };\n        if (userData.password) {\n          updateData.password = userData.password;\n        }\n        response = await providerService.updateProfile(updateData);\n      }\n      setUser(prev => {\n        var _response;\n        return {\n          ...prev,\n          ...(((_response = response) === null || _response === void 0 ? void 0 : _response.data) || {})\n        };\n      });\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response6, _err$response6$data, _err$response7, _err$response7$data;\n      console.error('Update profile error:', err);\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.error) || 'Failed to update profile. Please try again.');\n      return {\n        success: false,\n        error: ((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.error) || 'Profile update failed'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const changePassword = async (oldPassword, newPassword) => {\n    setLoading(true);\n    setError('');\n    try {\n      let response;\n      if (user.role === 'customer') {\n        response = await customerService.changePassword(oldPassword, newPassword);\n      } else if (user.role === 'provider') {\n        response = await providerService.changePassword(oldPassword, newPassword);\n      } else {\n        throw new Error('Invalid user role');\n      }\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response8, _err$response8$data, _err$response9, _err$response9$data;\n      console.error('Password change error:', err);\n      setError(((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : (_err$response8$data = _err$response8.data) === null || _err$response8$data === void 0 ? void 0 : _err$response8$data.error) || 'Failed to change password. Please try again.');\n      return {\n        success: false,\n        error: ((_err$response9 = err.response) === null || _err$response9 === void 0 ? void 0 : (_err$response9$data = _err$response9.data) === null || _err$response9$data === void 0 ? void 0 : _err$response9$data.error) || 'Password change failed'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearError = () => {\n    setError('');\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    error,\n    setUser,\n    setToken,\n    setLoading,\n    setError,\n    checkAuthStatus,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"q+rAOeWQEI8eXYGgXyQrDnl9pqs=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","axios","api","authService","customerService","providerService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","token","setToken","localStorage","getItem","checkAuthStatus","defaults","headers","common","decodedToken","JSON","parse","atob","split","role","response","getProfile","Error","data","removeItem","err","console","login","id","password","res","post","process","env","REACT_APP_API_BASE_URL","setItem","stringify","success","_err$response","_err$response$data","registerCustomer","userData","backendData","name","firstName","lastName","email","phone","phoneNumber","visibility","userId","_err$response2","_err$response2$data","_err$response3","_err$response3$data","registerProvider","businessName","transportMode","mapServiceTypeToTransportMode","serviceType","_err$response4","_err$response4$data","_err$response5","_err$response5$data","register","logout","updateProfile","updateData","undefined","prev","_response","_err$response6","_err$response6$data","_err$response7","_err$response7$data","changePassword","oldPassword","newPassword","_err$response8","_err$response8$data","_err$response9","_err$response9$data","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/divya/mytravel/travel/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport api, { authService, customerService, providerService } from '../services/api';\n\n// Create the authentication context\nconst AuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [token, setToken] = useState(() => localStorage.getItem('token'));\n\n  // Check if user is authenticated on initial load\n  const checkAuthStatus = useCallback(async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n\n      if (!token) {\n        setUser(null);\n        setLoading(false);\n        return;\n      }\n\n      // Set default headers for all requests\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Try to get user profile based on role stored in token\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      const role = decodedToken.role;\n\n      let response;\n      if (role === 'customer') {\n        response = await customerService.getProfile();\n      } else if (role === 'provider') {\n        response = await providerService.getProfile();\n      } else {\n        throw new Error('Invalid user role');\n      }\n\n      if (response && response.data) {\n        setUser({\n          ...response.data,\n          role\n        });\n      } else {\n        setUser(null);\n        localStorage.removeItem('token');\n      }\n    } catch (err) {\n      console.error('Auth status error:', err);\n      setUser(null);\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n\n  // Login function\n  const login = async ({ id, password }) => {\n    setLoading(true);\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:4000/api'}/auth/login`, { id, password });\n      const { token, user } = res.data;\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      setUser(user);\n      setToken(token);\n      setError(null);\n      return { success: true };\n    } catch (err) {\n      setError(err.response?.data?.error || 'Login failed');\n      return { success: false };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const registerCustomer = async (userData) => {\n    setLoading(true);\n    setError('');\n    try {\n      const backendData = {\n        name: `${userData.firstName} ${userData.lastName}`,\n        email: userData.email,\n        phone: userData.phoneNumber,\n        password: userData.password,\n        visibility: 'public'\n      };\n\n      const response = await authService.registerCustomer(backendData);\n      const { token, user } = response.data;\n      return { success: true, userId: user.id };\n    } catch (err) {\n      console.error('Customer registration error:', err);\n      setError(err.response?.data?.error || 'Failed to register. Please try again.');\n      return { success: false, error: err.response?.data?.error || 'Registration failed' };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const registerProvider = async (userData) => {\n    setLoading(true);\n    setError('');\n    try {\n      const backendData = {\n        name: userData.businessName,\n        email: userData.email,\n        phone: userData.phoneNumber,\n        password: userData.password,\n        transportMode: mapServiceTypeToTransportMode(userData.serviceType)\n      };\n\n      const response = await authService.registerProvider(backendData);\n      const { token, user } = response.data;\n      return { success: true, userId: user.id };\n    } catch (err) {\n      console.error('Provider registration error:', err);\n      setError(err.response?.data?.error || 'Failed to register. Please try again.');\n      return { success: false, error: err.response?.data?.error || 'Registration failed' };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const mapServiceTypeToTransportMode = (serviceType) => {\n    switch (serviceType) {\n      case 'Hotel':\n      case 'Transportation':\n      case 'Tour Guide':\n      case 'Restaurant':\n      case 'Activity':\n      default:\n        return 'land';\n    }\n  };\n\n  const register = async (userData) => {\n    if (userData.role === 'customer') {\n      return registerCustomer(userData);\n    } else if (userData.role === 'provider') {\n      return registerProvider(userData);\n    } else {\n      setError('Invalid user role');\n      return { success: false, error: 'Invalid user role' };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    delete api.defaults.headers.common['Authorization'];\n  };\n\n  const updateProfile = async (userData) => {\n    setLoading(true);\n    setError('');\n    try {\n      let response;\n      if (user.role === 'customer') {\n        const updateData = {\n          name: userData.firstName && userData.lastName ? `${userData.firstName} ${userData.lastName}` : undefined,\n          email: userData.email,\n          phone: userData.phoneNumber,\n          visibility: userData.visibility || 'public'\n        };\n        if (userData.password) {\n          updateData.password = userData.password;\n        }\n        response = await customerService.updateProfile(updateData);\n      } else if (user.role === 'provider') {\n        const updateData = {\n          name: userData.businessName,\n          email: userData.email,\n          phone: userData.phoneNumber,\n          transportMode: userData.transportMode || 'land'\n        };\n        if (userData.password) {\n          updateData.password = userData.password;\n        }\n        response = await providerService.updateProfile(updateData);\n      }\n\n      setUser(prev => ({\n        ...prev,\n        ...(response?.data || {})\n      }));\n\n      return { success: true };\n    } catch (err) {\n      console.error('Update profile error:', err);\n      setError(err.response?.data?.error || 'Failed to update profile. Please try again.');\n      return { success: false, error: err.response?.data?.error || 'Profile update failed' };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const changePassword = async (oldPassword, newPassword) => {\n    setLoading(true);\n    setError('');\n    try {\n      let response;\n      if (user.role === 'customer') {\n        response = await customerService.changePassword(oldPassword, newPassword);\n      } else if (user.role === 'provider') {\n        response = await providerService.changePassword(oldPassword, newPassword);\n      } else {\n        throw new Error('Invalid user role');\n      }\n      return { success: true };\n    } catch (err) {\n      console.error('Password change error:', err);\n      setError(err.response?.data?.error || 'Failed to change password. Please try again.');\n      return { success: false, error: err.response?.data?.error || 'Password change failed' };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clearError = () => {\n    setError('');\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    error,\n    setUser,\n    setToken,\n    setLoading,\n    setError,\n    checkAuthStatus,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}